{"version":3,"sources":["components/quotes/HighlightedQuote.module.css","components/quotes/HighlightedQuote.js","Pages/QuoteDetail.js"],"names":["module","exports","HighlightedQuote","props","className","classes","quote","text","author","QuoteDetail","params","useParams","useHttp","getSingleQuote","sendRequest","status","loadedQuote","data","error","quoteId","useEffect","LoadingSpinner","path","element","to","id","exact","Comments"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,MAAQ,kC,wGCUXC,EATU,SAACC,GACxB,OACE,yBAAQC,UAAWC,IAAQC,MAA3B,UACE,4BAAIH,EAAMI,OACV,qCAAaJ,EAAMK,a,sBCgDVC,UA5Cf,WAEI,IAAMC,EAASC,cAGf,EAA0DC,YAAQC,KAAgB,GAA1EC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OAAcC,EAAnC,EAA6BC,KAAmBC,EAAhD,EAAgDA,MAExCC,EAAYT,EAAZS,QAMR,OAJAC,qBAAU,WACNN,EAAYK,KACb,CAACL,EAAaK,IAEF,YAAXJ,EACO,qBAAKX,UAAU,WAAf,SACH,cAACiB,EAAA,EAAD,MAIJH,EACO,mBAAGd,UAAU,WAAb,SAAyBc,IAG/BF,EAAYT,KAOb,eAAC,WAAD,WACI,cAAC,EAAD,CAAkBA,KAAMS,EAAYT,KAAMC,OAAQQ,EAAYR,SAC9D,eAAC,IAAD,WACI,cAAC,IAAD,CAAOc,KAAM,GAAIC,QACb,qBAAKnB,UAAU,WAAf,SACI,cAAC,IAAD,CAAMA,UAAU,YAAYoB,GAAE,kBAAaR,EAAYS,GAAzB,aAA9B,6BAENC,OAAK,IACP,cAAC,IAAD,CAAOJ,KAAM,YAAaC,QAAS,cAACI,EAAA,EAAD,YAdpC,qBAAKvB,UAAU,WAAf,SACH","file":"static/js/4.7db16408.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__jqUkt\"};","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import React, { useEffect } from 'react'\r\nimport { Link, Route, Routes, useMatch, useParams } from 'react-router-dom'\r\nimport { Fragment } from 'react/cjs/react.production.min';\r\n\r\nimport Comments from '../components/comments/Comments'\r\nimport HighlightedQuote from '../components/quotes/HighlightedQuote'\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\nimport useHttp from '../hooks/use-http';\r\nimport { getSingleQuote } from '../lib/api';\r\n\r\nfunction QuoteDetail() {\r\n\r\n    const params = useParams();\r\n    // const match = useMatch(`/quotes/:quoteId`);\r\n    // console.log(match)\r\n    const { sendRequest, status, data: loadedQuote, error } = useHttp(getSingleQuote, true)\r\n\r\n    const { quoteId } = params;\r\n\r\n    useEffect(() => {\r\n        sendRequest(quoteId)\r\n    }, [sendRequest, quoteId])\r\n\r\n    if (status === 'pending') {\r\n        return <div className=\"centered\">\r\n            <LoadingSpinner />\r\n        </div>\r\n    }\r\n\r\n    if (error) {\r\n        return <p className=\"centered\">{error}</p>\r\n    }\r\n\r\n    if (!loadedQuote.text) {\r\n        return <div className=\"centered\">\r\n            <p>No quote found</p>\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\r\n            <Routes>\r\n                <Route path={''} element={\r\n                    <div className=\"centered\">\r\n                        <Link className=\"btn--flat\" to={`/quotes/${loadedQuote.id}/comments`}>Load Comments</Link>\r\n                    </div>\r\n                } exact />\r\n                <Route path={'/comments'} element={<Comments />} />\r\n            </Routes>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default QuoteDetail"],"sourceRoot":""}