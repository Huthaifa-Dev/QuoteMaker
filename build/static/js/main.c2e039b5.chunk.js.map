{"version":3,"sources":["components/UI/LoadingSpinner.js","hooks/use-http.js","lib/api.js","components/layout/MainNavigation.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","components/layout/Layout.module.css","components/quotes/QuoteItem.module.css","components/quotes/NoQuotesFound.module.css","components/UI/LoadingSpinner.module.css","components/comments/Comments.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/layout/MainNavigation.js","components/layout/Layout.js","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/quotes/NoQuotesFound.js","Pages/AllQuotes.js","App.js","index.js"],"names":["LoadingSpinner","className","classes","spinner","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","a","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","id","push","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","module","exports","NewCommentForm","props","commentTextRef","useRef","onAddedComment","useEffect","submitFormHandler","event","preventDefault","enteredText","current","value","console","log","text","form","onSubmit","control","htmlFor","rows","ref","actions","CommentItem","item","CommentsList","comments","map","comment","Comments","useState","isAddingComment","setIsAddingComment","loadedData","useParams","addedCommentHandler","length","onClick","MainNavigation","activeClass","navData","isActive","active","header","logo","nav","to","Layout","main","children","QuoteItem","navigate","useNavigate","author","QuoteList","quotes","ascending","filter","setFilter","location","useLocation","isSortingAscending","URLSearchParams","search","get","sort","quoteA","quoteB","sorting","prevFilter","list","quote","NoQuotesFound","noquotes","AllQuotes","NewQuote","React","lazy","QuoteDetail","ErrorPage","App","fallback","path","element","replace","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c2e039b5.chunk.js","sourcesContent":["import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN = 'https://quotemaker-77257-default-rtdb.firebaseio.com';\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quote.');\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: 'POST',\n    body: JSON.stringify(quoteData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not create quote.');\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`, {\n    method: 'POST',\n    body: JSON.stringify(requestData.commentData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not add comment.');\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not get comments.');\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__3RRDq\",\"logo\":\"MainNavigation_logo__3louK\",\"nav\":\"MainNavigation_nav__2eFU4\",\"active\":\"MainNavigation_active__PSsEs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__3AehX\",\"loading\":\"NewCommentForm_loading__1AgF-\",\"control\":\"NewCommentForm_control__BJo9A\",\"actions\":\"NewCommentForm_actions__He8rh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__2YGDG\",\"sorting\":\"QuoteList_sorting__EUKN3\"};","import React, { useEffect } from 'react';\nimport { useRef } from 'react';\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\n\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n  const { quoteId, onAddedComment } = props;\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  useEffect(() => {\n    if (status === 'completed' && !error) {\n      onAddedComment(commentTextRef);\n    }\n    if (error) {\n      return <div className='centered'>\n        {error}\n      </div>\n    }\n  }, [status, error, onAddedComment])\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    const enteredText = commentTextRef.current.value;\n    // optional: Could validate here\n\n    // send comment to server\n    console.log({ text: enteredText }, quoteId)\n    sendRequest({ commentData: { text: enteredText, }, quoteId: props.quoteId });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === 'pending' && (\n        <div className='centered'>\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","\nimport { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport CommentsList from './CommentsList';\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const { sendRequest, status, data: loadedData } = useHttp(getAllComments)\n\n  const params = useParams()\n  const { quoteId } = params;\n\n  useEffect(() => {\n    sendRequest(quoteId)\n  }, [sendRequest, quoteId]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(\n    () => {\n      sendRequest(quoteId)\n    },\n    [sendRequest, quoteId]);\n\n  let comments;\n\n  if (status === 'pending') {\n    comments = <div className=\"centered\">\n      <LoadingSpinner />\n    </div>\n  }\n  if (status === 'completed' && loadedData) {\n    comments = <CommentsList comments={loadedData} />\n  }\n\n  if (status === 'completed' && (!loadedData || loadedData.length === 0)) {\n    comments = <div className=\"centered\">\n      No comments were added yet.\n    </div>\n  }\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm quoteId={quoteId} onAddedComment={addedCommentHandler} />}\n      <p>Comments...</p>\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__eaOV1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__rIKWE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__I2v2c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__c5q10\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments___ktyJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__1gNwb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__32_DG\"};","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport classes from './MainNavigation.module.css'\r\nfunction MainNavigation() {\r\n\r\n    // className={(navData) => navData.isActive ? \"active\" : \"\" }\r\n\r\n    const activeClass = navData => navData.isActive ? classes.active : '';\r\n    return (\r\n        <header className={classes.header}>\r\n            <div className={classes.logo}>Quote Maker</div>\r\n            <nav className={classes.nav}>\r\n                <ul>\r\n                    <li>\r\n                        <NavLink to=\"/quotes\" className={activeClass}>\r\n                            All Quotes\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/new-quote\" className={activeClass}>\r\n                            Add Quote\r\n                        </NavLink>\r\n                    </li>\r\n\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default MainNavigation","import React from 'react'\r\nimport { Fragment } from 'react/cjs/react.production.min';\r\nimport classes from './Layout.module.css';\r\nimport MainNavigation from './MainNavigation';\r\n\r\nfunction Layout(props) {\r\n    return (\r\n        <Fragment>\r\n            <MainNavigation />\r\n            <main className={classes.main}>{props.children}</main>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Layout","import { useNavigate } from 'react-router-dom';\nimport classes from './QuoteItem.module.css';\n\nconst QuoteItem = (props) => {\n\n  const navigate = useNavigate();\n\n  const goToDetails = () => {\n    navigate(`/quotes/${props.id}`)\n  }\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <a className='btn' onClick={goToDetails}>\n        View Fullscreen\n      </a>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import React, { Fragment, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\n\nconst QuoteList = (props) => {\n\n  const [filter, setFilter] = useState('Ascending');\n  const navigate = useNavigate();\n  const location = useLocation();\n\n\n  const queryParams = new URLSearchParams(location.search);\n  const isSortingAscending = queryParams.get('sort') === 'asc';\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n  const filterHandler = () => {\n    setFilter(prevFilter => {\n      return filter === 'Ascending' ? 'Descending' : 'Ascending';\n    });\n    navigate(`/quotes?sort=${filter === 'Ascending' ? 'asc' : 'desc'}`);\n\n  }\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={filterHandler}>Sort {filter}</button>\n      </div>\n      <ul className={classes.list}>\n        {props.quotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import { Link } from 'react-router-dom';\nimport classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className='btn' to='/new-quote'>\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import React, { useEffect } from 'react'\r\nimport QuoteList from '../components/quotes/QuoteList'\r\nimport NoQuotesFound from '../components/quotes/NoQuotesFound'\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner'\r\nimport useHttp from '../hooks/use-http'\r\nimport { getAllQuotes } from '../lib/api'\r\n\r\nfunction AllQuotes() {\r\n    const { sendRequest, status, data: loadedData, error } = useHttp(getAllQuotes, true);\r\n\r\n    useEffect(() => {\r\n        sendRequest();\r\n    }, [sendRequest])\r\n\r\n    if (status === 'pending') {\r\n        return (\r\n            <div className=\"centered\">\r\n                <LoadingSpinner />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <p className=\"centered focused\">\r\n                {error}\r\n            </p>\r\n        )\r\n    }\r\n\r\n    if (status === 'completed' && (!loadedData || loadedData.length === 0)) {\r\n        return (\r\n            <NoQuotesFound />\r\n        )\r\n    }\r\n\r\n    return <QuoteList quotes={loadedData} />\r\n}\r\n\r\nexport default AllQuotes","import React, { Suspense } from \"react\";\nimport { Navigate, Route, Routes } from \"react-router-dom\";\nimport Layout from \"./components/layout/Layout\";\nimport AllQuotes from \"./Pages/AllQuotes\";\n// import NewQuote from \"./Pages/NewQuote\";\n// import QuoteDetail from \"./Pages/QuoteDetail\";\n// import ErrorPage from \"./Pages/ErrorPage\";\nimport Comments from \"./components/comments/Comments\";\nimport LoadingSpinner from \"./components/UI/LoadingSpinner\";\n\nconst NewQuote = React.lazy(() => import('./Pages/NewQuote'));\nconst QuoteDetail = React.lazy(() => import('./Pages/QuoteDetail'))\nconst ErrorPage = React.lazy(() => import('./Pages/ErrorPage'))\nfunction App() {\n\n  return (\n    <Layout>\n      <Suspense fallback={\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      } >\n        <Routes>\n          <Route path=\"/\" element={<Navigate replace to=\"/quotes\" />} exact />\n          <Route path=\"quotes\" element={<AllQuotes />} exact />\n          <Route path=\"quotes/:quoteId\" element={<QuoteDetail />}>\n            <Route path={`comments`} element={<Comments />} />\n          </Route>\n          <Route path=\"new-quote\" element={<NewQuote />} exact />\n          <Route path=\"*\" element={<ErrorPage />} exact />\n\n        </Routes>\n      </Suspense>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n    , document.getElementById('root'));\n"],"sourceRoot":""}